@using MySystemConfig.Model

@model IEnumerable<SystemConfigValue>

@{
    ViewBag.Title = "Index";
    SystemConfigType typeData = ViewBag.SystemConfigType;
}

<h2>Index</h2>

@if (typeData.ConfigClassName == SystemConfigType.SimpleDictionary)
{
    <a href="/SystemConfigValue/Create/@(typeData.ConfigTypeCode)"> Create </a>
}




<form action="/SystemConfigValue/Index/@(typeData.ConfigTypeCode)" method="post">

    @if (typeData.ConfigClassName == SystemConfigType.SimpleDictionary)
    {
        @Html.Action(actionName: "Search", routeValues: new { id = typeData.ConfigTypeCode })
    }

    <input type="submit" value="Query" />
</form>




<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ConfigTypeCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ConfigCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ConfigName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ConfigValue)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ConfigTypeCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ConfigCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ConfigName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ConfigValue)
        </td>


        <td>
            @Html.ActionLink("Edit", "Edit", new { configTypeCode = item.ConfigTypeCode, configCode = item.ConfigCode }) |

            @Html.ActionLink("Details", "Details", new { configTypeCode = item.ConfigTypeCode, configCode = item.ConfigCode }) |

            
            
            @Html.ActionLink("GetConfigList", "GetConfigList", new { configTypeCode = item.ConfigTypeCode}) |
            @Html.ActionLink("GetConfig", "GetConfig", new { configTypeCode = item.ConfigTypeCode, configCode = item.ConfigCode }) 
               
        </td>
    </tr>
}

</table>
